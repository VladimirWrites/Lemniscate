apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'jacoco'

jacoco {
    toolVersion = Versions.jacoco
}

android {
    compileSdkVersion Versions.compile_sdk
    buildToolsVersion Versions.build_tools

    defaultConfig {
        minSdkVersion Versions.min_sdk
        targetSdkVersion Versions.target_sdk
        versionCode Versions.lemniscate_version_code
        versionName Versions.lemniscate_version_name
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
        unitTests {
            includeAndroidResources = true
        }
    }
}

task jacocoDebugReport(type: JacocoReport, dependsOn: ['testDebugUnitTest']) {

    reports {
        csv.enabled = false
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def kotlinDebugTree = fileTree(dir: "${buildDir}/tmp/kotlin-classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/androidTest/java"

    getSourceDirectories().setFrom(files([mainSrc]))
    getClassDirectories().setFrom(files([debugTree], [kotlinDebugTree]))
    getExecutionData().setFrom(fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec",
            "outputs/code-coverage/connected/*coverage.ec"
    ]))
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation Deps.appcompat
    implementation Deps.kotlin_stdlib

    testImplementation Deps.junit
    testImplementation Deps.mockito_core
    testImplementation Deps.mockito_kotlin
    testImplementation Deps.truth
    testImplementation Deps.robolectric
}
repositories {
    mavenCentral()
}
